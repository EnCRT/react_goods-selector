{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","selectorChange","selectedProduct","isSelected","setState","filter","good","this","selected","length","title","join","className","type","classNames","reset_btn__hidden","onClick","map","product","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,eAAiB,SAACC,EAAyBC,GACzC,EAAKC,UAAS,gBAAGJ,EAAH,EAAGA,cAAH,OACZG,EACI,CAAEH,cAAeA,EAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,MACvD,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,S,4CAI5C,WAAU,IAAD,OACCF,EAAkBO,KAAKR,MAAvBC,cACFQ,EAAWR,EAAcS,OACzBC,EAAQF,EAAQ,UAAMR,EAAcW,KAAK,MAAzB,gBAA+C,oBAErE,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGF,IAEH,wBACEG,KAAK,SACLD,UAAWE,IACT,YACA,CAAEC,mBAAoBP,IAExBQ,QAAS,kBAAM,EAAKZ,SAAS,CAAEJ,cAAe,MANhD,8BAWF,oBAAIY,UAAU,iBAAd,SACGf,EAAgBoB,KAAI,SAAAC,GACnB,IAAMf,EAAaH,EAAcmB,SAASD,GAE1C,OACE,sBAEEN,UAAWE,IACT,kBACA,CAAE,4BAA6BX,IAJnC,UAOE,oBAAIS,UAAU,iBAAd,SACGM,IAEH,wBACEL,KAAK,SACLD,UAAU,MACVI,QAAS,WACP,OAAO,EAAKf,eAAeiB,EAASf,IAJxC,SAOGA,EAAa,SAAW,aAhBvB,uB,GAzCFiB,IAAMC,WAoETvB,ICvFfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50dc4b9d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectorChange = (selectedProduct: string, isSelected:boolean) => {\n    this.setState(({ selectedGoods }) => (\n      isSelected\n        ? { selectedGoods: selectedGoods.filter(good => good !== selectedProduct) }\n        : { selectedGoods: [...selectedGoods, selectedProduct] }\n    ));\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const selected = selectedGoods.length;\n    const title = selected ? `${selectedGoods.join(', ')} is selected` : 'No goods selected';\n\n    return (\n      <div className=\"products\">\n        <div className=\"products__header\">\n          <h1 className=\"products__title\">\n            {title}\n          </h1>\n          <button\n            type=\"button\"\n            className={classNames(\n              'reset_btn',\n              { reset_btn__hidden: !selected },\n            )}\n            onClick={() => this.setState({ selectedGoods: [] })}\n          >\n            x Clear All x\n          </button>\n        </div>\n        <ul className=\"products__list\">\n          {goodsFromServer.map(product => {\n            const isSelected = selectedGoods.includes(product);\n\n            return (\n              <div\n                key=\"product\"\n                className={classNames(\n                  'products__field',\n                  { 'products__field--selected': isSelected },\n                )}\n              >\n                <li className=\"products__item\">\n                  {product}\n                </li>\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  onClick={() => {\n                    return this.selectorChange(product, isSelected);\n                  }}\n                >\n                  {isSelected ? 'Remove' : 'Select'}\n                </button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}